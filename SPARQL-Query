For Wikidata:

SELECT DISTINCT  ?drugLabel ?disorderLabel 
WHERE
{
   ?disorder wdt:P279 wd #add specific disease.
   ?disorder wdt:P2176 ?drug.
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
  }


For Bio2RDF: 

PREFIX cv: <http://bio2rdf.org/clinicaltrials_vocabulary:>
SELECT DISTINCT ?drug ?article
WHERE
 {
  ?drug dcterms:title ""@en.  #the specific drug we are searching for
  ?article cv:intervention ?drug.
           }

Federated Query:

PREFIX cv: <http://bio2rdf.org/clinicaltrials_vocabulary:>

SELECT DISTINCT ?disorderLabel ?drugLabel  ?functionLabel ?article_url ?article_name ?article_summary

WHERE {
  ?disorder wdt:P279 wd:Q188638. #add specific disease.
  ?disorder wdt:P2176 ?drug.
  ?drug wdt:P2868 ?function.
  SERVICE <http://bio2rdf.org/sparql> {  
    ?article cv:intervention ?drug;
             cv:url ?article_url;
             rdfs:label ?article_name;
             cv:brief-summary ?article_summary.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}


#### LOOK I THINK THIS WORKS! ##### ->

<!DOCTYPE html>
<html lang="en">
<head>
  <title>Example</title>
  <!-- Initialize a global WBK function -->
  <script src="https://cdn.rawgit.com/maxlath/wikidata-sdk/dist/dist/wikibase-sdk.min.js"></script>
  <!-- Initialize a global wdk object using the WBK object -->
  <script src="https://cdn.rawgit.com/maxlath/wikidata-sdk/dist/dist/wikidata-sdk.min.js"></script>
<script>
  const wbk = new WBK({
      instance: 'https://bio2rdf.org/',
      sparqlEndpoint: 'https://bio2rdf.org/sparql'
    });
</script>

</head>

<body>
  <pre id="output"></pre>
  <script>
    query = `PREFIX cv: <http://bio2rdf.org/clinicaltrials_vocabulary:>
SELECT DISTINCT ?article_url ?article_name ?article_summary
WHERE
 {
  ?drug ?p "Placebo"@en.  #the specific drug we are searching for
  ?article cv:intervention ?drug;
           cv:url ?article_url;
           rdfs:label ?article_name;
           cv:brief-summary ?article_summary.
 } LIMIT 20`
    const url = wbk.sparqlQuery(query)
    async function main () {
      const response = await fetch(url)
      const results = await response.json()
      const simpleResults = wbk.simplify.sparqlResults(results)
      document.getElementById('output').innerHTML =
        JSON.stringify(simpleResults, undefined, 2);
    }
    main()
  </script>
</body>
</html>
